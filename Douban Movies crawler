# -*- coding = utf-8 -*-
# @Time : 2021/5/20 4:56 下午
# @Author : Yifei
# @File : Web.py
# @Software: PyCharm

from bs4 import BeautifulSoup #网页解析
import urllib
import sqlite3

import urllib.request,urllib.error
import ssl
import certifi
import re
import xlwt
#1.爬去网页
#2.逐一解析数据
#3.保存数据


def main():
    baseurl = "https://movie.douban.com/top250?start="
    # 1.爬去网页
    # datalist=getData(baseurl)
    savepath='douban.xls'
    # 3.保存数据
    # askURL("https://movie.douban.com/top250")
    datalist = getData(baseurl)
    saveData(datalist, savepath)


#定义正则表达式
findLink = re.compile(r'<a href="(.*?)">') #compile 用来创建正则表达式对象，用来表示规则
findmgSrc =re.compile(r'<img.*src=(.*?)"',re.S) #re.S忽略换行符号，让换行符包含在字符中
findTitle = re.compile(r'<span class="title">(.*?)</span>')
findRating = re.compile(r'<span class="rating_num" property="v:average">(.*)</span>')
findRatingNumber = re.compile(r'<span>(\d*)人评价</span>')
findInf = re.compile(r'<span class="inq">(.*)</span>')
findBd = re.compile(r'<p class="">(.*?)</p>',re.S)

# 1.爬取网页
def getData(baseurl):
    datalist=[]
    for i in range(0,10): #   调用获取信息的函数10次
        url = baseurl + str(i*25)
        html=askURL(url)    #保存获取到的网页源码

        # 2.逐一解析数据
        soup =BeautifulSoup(html,"html.parser")
        for item in soup.find_all('div', class_="item"): #查找符合要求的字符串，形成列表
            #print(item) #为了测试，查看电影item的全部信息
            data=[] #保存一部电影的所有信息
            item =str(item)
            # print(item)
            # break
            #提取超链接
            link = re.findall(findLink,item)[0]   #用re库来通过正则表达式查找指定的字符串 [0]表示多个里面的第一个
            data.append(link)

            imgSrc = re.findall(findmgSrc,item)[0]
            data.append(imgSrc)

            title =re.findall(findTitle,item)
            if(len(title)==2):
                ctitle= title[0] #添加中文名
                data.append(ctitle)
                ftitle=title[1].replace("/","") #去掉无关的符号，添加外国
                data.append(ftitle)
            else:
                data.append(title[0])
                data.append(' ') #留空

            rating= re.findall(findRating,item)[0]
            data.append(rating)

            judgeNum=re.findall(findRatingNumber,item)[0]
            data.append(judgeNum)

            inq= re.findall(findInf,item)
            if len(inq) !=0:
                inq =inq[0].replace("。","")
                data.append(inq)
            else:
                data.append("")

            bd= re.findall(findBd,item)[0]
            bd = re.sub('<br(\s+)?/>(\s+)?', " ", bd) #/s表示空格
            bd = re.sub('/',' ',bd)
            data.append(bd.strip()) #strip去掉前后的空格
            datalist.append(data) #把放入一部电影
    # print(datalist)
    return datalist

#得到指定的一个URL的网页内容
def askURL(url):
    head={
        "User-Agent": "Mozilla / 5.0(Macintosh;Intel Mac OS X 10_15_6) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 90.0.4430.212 Safari / 537.36"
    }
    request = urllib.request.Request(url, headers=head)
    html = ""
    try:
        response = urllib.request.urlopen(request,context=ssl.create_default_context(cafile=certifi.where()))
        html = response.read().decode("UTF-8")
        # print(html)
    except urllib.error.URLError as e: #访问的时候可能会遇到404
        if hasattr(e, "code"): #hasattr是标签的意思，返回e的错误代码
            print(e.code)
        if hasattr(e,"reason"):
            print(e.reason)

    return html

def saveData(datalist,savepath):
    print("save.....")
    book = xlwt.Workbook(encoding="utf-8",style_compression=0)  # 创建workbook的对象，文件
    sheet = book.add_sheet('豆瓣电影top250',cell_overwrite_ok=True)  # 创建工作表,可以覆盖之前的内容
    col=("电影详情链接","图片链接","影片中文名","外文名","评分","评分数","概括","相关信息")
    for i in range(0,8):
        sheet.write(0,i,col[i])
    for i in range(0,250):
        print("第%d条"%i)
        data= datalist[i]
        for j in range(0,8):
            sheet.write(i+1,j,data[j])
    book.save(savepath)

if __name__=="__main__":
    main()
